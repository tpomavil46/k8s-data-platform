apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-stack
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 58.0.0  # Use latest stable version, check: helm search repo prometheus-community/kube-prometheus-stack
    helm:
      skipCrds: true # CRDs should be managed separately - applied server-side
      values: |
        # Prometheus Stack Configuration for Manufacturing Data Platform
        
        # Global settings
        fullnameOverride: prometheus
        
        # Prometheus configuration
        prometheus:
          prometheusSpec:
            retention: 30d
            retentionSize: "50GB"
            
            # Reduced resource limits for your cluster
            resources:
              requests:
                cpu: 200m      # Reduced from 500m
                memory: 1Gi    # Reduced from 2Gi
              limits:
                cpu: 1000m     # Reduced from 2000m
                memory: 2Gi    # Reduced from 4Gi
            
            # Persistent storage
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: managed-nfs-storage  # Match your existing storage class
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 100Gi
            
            # Service monitors selector - will pick up all ServiceMonitors
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            
            # Additional scrape configs for custom targets
            additionalScrapeConfigs: []
          
          # Ingress for Prometheus UI
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
            hosts:
              - prometheus.tpomaville.com
            tls:
              - secretName: prometheus-tls
                hosts:
                  - prometheus.tpomaville.com
        
        # Grafana configuration (we'll configure this more in the next step)
        grafana:
          enabled: true
          adminPassword: "changeme123"  # CHANGE THIS or use a secret
          
          persistence:
            enabled: true
            storageClassName: managed-nfs-storage
            size: 10Gi
          
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
            hosts:
              - grafana.tpomaville.com
            tls:
              - secretName: grafana-tls
                hosts:
                  - grafana.tpomaville.com
          
          # Pre-install some useful plugins
          plugins:
            - grafana-piechart-panel
            - grafana-clock-panel
            - grafana-simple-json-datasource
        
        # Alertmanager configuration
        alertmanager:
          alertmanagerSpec:
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: managed-nfs-storage
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi
        
        # Enable default exporters
        nodeExporter:
          enabled: true
        
        kubeStateMetrics:
          enabled: true
        
        # Disable components we don't need yet
        defaultRules:
          create: true
          rules:
            alertmanager: true
            etcd: false  # Disable if not monitoring etcd
            kubeApiserver: true
            kubeScheduler: false
            kubeControllerManager: false
            kubeProxy: false
            node: true
            prometheus: true
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
  ignoreDifferences:
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
    jsonPointers:
    - /metadata/annotations
