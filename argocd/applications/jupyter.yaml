apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: jupyterhub
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://hub.jupyter.org/helm-chart/
    chart: jupyterhub
    targetRevision: 3.3.8
    helm:
      values: |
        proxy:
          service:
            type: ClusterIP
        singleuser:
          defaultUrl: "/lab"
          image:
            name: jupyter/pyspark-notebook
            tag: "latest"
          extraEnv:
            JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
            PYTHONPATH: ""
          storage:
            dynamic:
              storageClass: managed-nfs-storage
              pvcNameTemplate: claim-{username}
            capacity: 10Gi
          startTimeout: 600
          cpu:
            limit: 2
            guarantee: 0.1
          memory:
            limit: 4G
            guarantee: 512M
          serviceAccountName: jupyter-spark
          lifecycleHooks:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "pip install --quiet --upgrade --force-reinstall pyspark==4.0.1"]
        hub:
          config:
            JupyterHub:
              authenticator_class: github
            GitHubOAuthenticator:
              client_id: dummy
              client_secret: dummy
              oauth_callback_url: https://jupyter.tpomaville.com/hub/oauth_callback
              allowed_organizations: []
              allowed_users:
                - tpomavil46
              admin_users:
                - tpomavil46
              scope:
                - read:user
          extraEnv:
            OAUTH_CLIENT_ID:
              valueFrom:
                secretKeyRef:
                  name: jupyterhub-github-oauth
                  key: client-id
            OAUTH_CLIENT_SECRET:
              valueFrom:
                secretKeyRef:
                  name: jupyterhub-github-oauth
                  key: client-secret
          extraConfig:
            auth: |
              from oauthenticator.github import GitHubOAuthenticator
              c.JupyterHub.authenticator_class = GitHubOAuthenticator
              c.GitHubOAuthenticator.client_id = os.environ.get('OAUTH_CLIENT_ID')
              c.GitHubOAuthenticator.client_secret = os.environ.get('OAUTH_CLIENT_SECRET')
              c.GitHubOAuthenticator.oauth_callback_url = 'https://jupyter.tpomaville.com/hub/oauth_callback'
  destination:
    server: https://kubernetes.default.svc
    namespace: jupyter
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true