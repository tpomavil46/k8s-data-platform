apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: superset
  namespace: argocd
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: superset
  source:
    repoURL: https://charts.bitnami.com/bitnami
    chart: superset
    targetRevision: 5.0.0
    helm:
      parameters: []  # keep empty; use values-only so defaults donâ€™t sneak back
      values: |
        # ---- Superset container image (Docker Hub, simple tag) ----
        image:
          registry: docker.io
          repository: bitnami/superset
          tag: "5.0.0"
          pullPolicy: IfNotPresent

        # ---- Disable built-in Postgres but keep image stanzas to satisfy helpers ----
        postgresql:
          enabled: false
          image:
            registry: docker.io
            repository: bitnami/postgresql
            tag: 16.4.0
          primary:
            image:
              registry: docker.io
              repository: bitnami/postgresql
              tag: 16.4.0

        # ---- Disable built-in Redis and satisfy helpers ----
        redis:
          enabled: false
          image:
            registry: docker.io
            repository: bitnami/redis
            tag: 7.2.4

        # ---- Turn off the chart's default wait-for-DB/Redis init containers everywhere ----
        defaultInitContainers:
          waitForDB:
            enabled: false
          waitForRedis:
            enabled: false

        # ---- Use your external Postgres ----
        externalDatabase:
          host: 172.16.0.20
          port: 5432
          user: superset
          database: superset
          passwordSecret: superset-externaldb
          passwordSecretKey: db-password

        # ---- Only web; keep it light ----
        web:
          replicaCount: 1
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
          # not strictly needed because defaultInitContainers is disabled,
          # but leaving these empty ensures no extras are added
          initContainers: []

        worker:
          enabled: false
          initContainers: []

        scheduler:
          enabled: false
          initContainers: []

        # keep service simple; Ingress or LB can be added later
        service:
          type: ClusterIP
          port: 8088
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true